# Before running
# set env variable AWS_ACCESS_KEY or EC2_ACCESS_KEY
# set env variable AWS_SECRET_ACCESS_KEY or AWS_SECRET_KEY
# add haufe-devops.pem key in ~/.ssh

- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  remote_user: ec2-user
  
  vars:
    keypair: haufe-devops
    instance_type: t2.micro
    security_group: haufe-secgroup
    vpc_id: vpc-2bf26c42
    subnet_id: subnet-c72b41ae
    image: ami-0233214e13e500f77 # amzn-ami-hvm-2018.03.0.20180811-x86_64-gp2
    region: eu-central-1

  tasks:
    - name: Create haufe-secgroup
      ec2_group:
        name: "{{ security_group }}"
        description: haufe security group
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
          - proto: icmp
            from_port: -1
            to_port: -1
            cidr_ip: 0.0.0.0/0

        rules_egress:
          - proto: all
            from_port: 0
            to_port: 0
            cidr_ip: 0.0.0.0/0

    - name: Launch instance
      ec2:
         count: 1
         key_name: "{{ keypair }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ subnet_id }}"
         assign_public_ip: yes
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 30
        timeout: 30
      with_items: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  remote_user: ec2-user
  become: True
  gather_facts: True
  roles:
    - haufe_nginx


- name: Print ec2 info and access
  hosts: localhost

  tasks:
    - debug:
        msg: "Installation finished. Test available at: https://{{ item.public_dns_name }}"
      with_items: "{{ ec2.instances }}"
      when: ec2.instances is defined